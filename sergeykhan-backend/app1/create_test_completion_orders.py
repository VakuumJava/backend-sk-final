#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤.
–°–æ–∑–¥–∞–µ—Ç –∑–∞–∫–∞–∑—ã –≤ —Å—Ç–∞—Ç—É—Å–µ '–Ω–∞–∑–Ω–∞—á–µ–Ω' –∏–ª–∏ '–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è', –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å 
–¥–ª—è —Ä—É—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤.
"""
import os
import sys
import django
import random
from datetime import datetime, timedelta
from django.utils import timezone

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'app1.settings')
django.setup()

from api1.models import CustomUser, Order, MasterAvailability

def create_test_completion_orders():
    print("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...")
    
    # –ü–æ–ª—É—á–∞–µ–º –º–∞—Å—Ç–µ—Ä–æ–≤
    masters = CustomUser.objects.filter(role='master')
    if not masters.exists():
        print("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–∞—Å—Ç–µ—Ä–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –º–∞—Å—Ç–µ—Ä–æ–≤.")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤
    operators = CustomUser.objects.filter(role='operator')
    if not operators.exists():
        print("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤.")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –∫—É—Ä–∞—Ç–æ—Ä–æ–≤
    curators = CustomUser.objects.filter(role='curator')
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    service_types = [
        "–†–µ–º–æ–Ω—Ç –±—ã—Ç–æ–≤–æ–π —Ç–µ—Ö–Ω–∏–∫–∏", 
        "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ—Ö–Ω–∏–∫–∏", 
        "–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —Ç–µ—Ö–Ω–∏–∫–∏", 
        "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞", 
        "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è"
    ]
    
    equipment_types = [
        "–•–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫", 
        "–°—Ç–∏—Ä–∞–ª—å–Ω–∞—è –º–∞—à–∏–Ω–∞", 
        "–ü–æ—Å—É–¥–æ–º–æ–µ—á–Ω–∞—è –º–∞—à–∏–Ω–∞", 
        "–¢–µ–ª–µ–≤–∏–∑–æ—Ä", 
        "–ú–∏–∫—Ä–æ–≤–æ–ª–Ω–æ–≤–∞—è –ø–µ—á—å", 
        "–ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä", 
        "–ü—ã–ª–µ—Å–æ—Å", 
        "–í–æ–¥–æ–Ω–∞–≥—Ä–µ–≤–∞—Ç–µ–ª—å"
    ]
    
    brands = [
        "Samsung", 
        "LG", 
        "Bosch", 
        "Electrolux", 
        "Sony", 
        "Haier", 
        "Siemens", 
        "Zanussi", 
        "Indesit", 
        "BEKO"
    ]
    
    problems = [
        "–Ω–µ –≤–∫–ª—é—á–∞–µ—Ç—Å—è", 
        "—à—É–º–∏—Ç –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ", 
        "–ø—Ä–æ—Ç–µ–∫–∞–µ—Ç", 
        "–Ω–µ –≥—Ä–µ–µ—Ç", 
        "–≤—ã–¥–∞–µ—Ç –æ—à–∏–±–∫—É", 
        "–Ω–µ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è", 
        "—Ç—Ä–µ—Å–Ω—É–ª —ç–∫—Ä–∞–Ω",
        "—Ç—Ä–µ–±—É–µ—Ç—Å—è –∑–∞–º–µ–Ω–∞ –¥–µ—Ç–∞–ª–∏",
        "–Ω—É–∂–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞",
        "–Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç—å –∫–æ–º–ø—Ä–µ—Å—Å–æ—Ä–∞"
    ]
    
    streets = [
        "—É–ª. –õ–µ–Ω–∏–Ω–∞", 
        "–ø—Ä. –ú–∏—Ä–∞", 
        "—É–ª. –ì–∞–≥–∞—Ä–∏–Ω–∞", 
        "—É–ª. –ü—É—à–∫–∏–Ω–∞", 
        "—É–ª. –°–æ–≤–µ—Ç—Å–∫–∞—è", 
        "—É–ª. –ú–æ–ª–æ–¥–µ–∂–Ω–∞—è", 
        "—É–ª. –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è", 
        "–ø—Ä. –ü–æ–±–µ–¥—ã", 
        "—É–ª. –ù–∞–±–µ—Ä–µ–∂–Ω–∞—è", 
        "—É–ª. –ú–æ—Å–∫–æ–≤—Å–∫–∞—è"
    ]
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–º–µ–Ω–∞
    first_names = [
        "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä", "–ò–≤–∞–Ω", "–ü–µ—Ç—Ä", "–ú–∏—Ö–∞–∏–ª", "–î–º–∏—Ç—Ä–∏–π", 
        "–ú–∞—Ä–∏—è", "–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞", "–û–ª—å–≥–∞", "–ê–Ω–Ω–∞", "–ï–ª–µ–Ω–∞"
    ]
    
    last_names = [
        "–ò–≤–∞–Ω–æ–≤", "–ü–µ—Ç—Ä–æ–≤", "–°–∏–¥–æ—Ä–æ–≤", "–°–º–∏—Ä–Ω–æ–≤", "–ö—É–∑–Ω–µ—Ü–æ–≤", 
        "–ò–≤–∞–Ω–æ–≤–∞", "–ü–µ—Ç—Ä–æ–≤–∞", "–°–∏–¥–æ—Ä–æ–≤–∞", "–°–º–∏—Ä–Ω–æ–≤–∞", "–ö—É–∑–Ω–µ—Ü–æ–≤–∞"
    ]
    
    # –°–æ–∑–¥–∞–µ–º 10 —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤
    for i in range(10):
        # –°–ª—É—á–∞–π–Ω–æ –≤—ã–±–∏—Ä–∞–µ–º –¥–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞
        service_type = random.choice(service_types)
        equipment_type = random.choice(equipment_types)
        brand = random.choice(brands)
        problem = random.choice(problems)
        street = random.choice(streets)
        
        first_name = random.choice(first_names)
        last_name = random.choice(last_names)
        client_name = f"{first_name} {last_name}"
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        phone = f"+7 (9{random.randint(10, 99)}) {random.randint(100, 999)}-{random.randint(10, 99)}-{random.randint(10, 99)}"
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞
        description = f"{service_type}: {brand} {equipment_type} {problem}"
        
        # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞
        master = random.choice(masters)
        
        # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–≥–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞
        operator = random.choice(operators)
        
        # –í—ã–±–∏—Ä–∞–µ–º –∫—É—Ä–∞—Ç–æ—Ä–∞, –µ—Å–ª–∏ –µ—Å—Ç—å
        curator = random.choice(curators) if curators.exists() else None
        
        # –í—ã–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç—É—Å (–Ω–∞–∑–Ω–∞—á–µ–Ω –∏–ª–∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è)
        status = random.choice(['–Ω–∞–∑–Ω–∞—á–µ–Ω', '–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è'])
        
        # –°–æ–∑–¥–∞–µ–º –¥–∞—Ç—ã –¥–ª—è –∑–∞–∫–∞–∑–∞
        scheduled_date = (timezone.now() + timedelta(days=random.randint(1, 5))).date()
        
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º—è –¥–ª—è –∑–∞–∫–∞–∑–∞ (—Å 9:00 –¥–æ 18:00)
        hour = random.randint(9, 17)
        minute = random.choice([0, 15, 30, 45])
        scheduled_time = datetime.strptime(f"{hour}:{minute}", "%H:%M").time()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —É –º–∞—Å—Ç–µ—Ä–∞ –≤ —ç—Ç–æ –≤—Ä–µ–º—è
        availability = MasterAvailability.objects.filter(
            master=master,
            date=scheduled_date,
            start_time__lte=scheduled_time,
            end_time__gt=scheduled_time
        ).first()
        
        # –ï—Å–ª–∏ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏, —Å–æ–∑–¥–∞–µ–º –µ—ë
        if not availability:
            start_hour = max(9, hour - 1)
            end_hour = min(18, hour + 1)
            
            MasterAvailability.objects.create(
                master=master,
                date=scheduled_date,
                start_time=datetime.strptime(f"{start_hour}:00", "%H:%M").time(),
                end_time=datetime.strptime(f"{end_hour}:00", "%H:%M").time()
            )
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑
        order_data = {
            'client_name': client_name,
            'client_phone': phone,
            'description': description,
            'street': street,
            'house_number': str(random.randint(1, 100)),
            'apartment': str(random.randint(1, 100)),
            'service_type': service_type,
            'equipment_type': equipment_type,
            'estimated_cost': random.randint(1500, 7000),
            'status': status,
            'operator': operator,
            'curator': curator,
            'assigned_master': master,
            'scheduled_date': scheduled_date,
            'scheduled_time': scheduled_time,
            'is_test': True  # –û—Ç–º–µ—á–∞–µ–º –∫–∞–∫ —Ç–µ—Å—Ç–æ–≤—ã–π
        }
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑
        order = Order.objects.create(**order_data)
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è
        created_at = timezone.now() - timedelta(days=random.randint(1, 3))
        order.created_at = created_at
        order.save()
        
        # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–∑–¥–∞–Ω–Ω–æ–º –∑–∞–∫–∞–∑–µ
        master_info = f" ‚Üí {order.assigned_master.first_name} {order.assigned_master.last_name}"
        operator_info = f" (–û–ø–µ—Ä–∞—Ç–æ—Ä: {order.operator.first_name})" if order.operator else ""
        schedule_info = f" | –ù–∞–∑–Ω–∞—á–µ–Ω–æ –Ω–∞: {order.scheduled_date.strftime('%d.%m.%Y')} {order.scheduled_time.strftime('%H:%M')}"
        
        print(f"‚úÖ –ó–∞–∫–∞–∑ #{order.id}: {order.client_name} - {order.status}{master_info}{operator_info}{schedule_info}")

if __name__ == "__main__":
    create_test_completion_orders()
    print("\n‚úÖ –ì–æ—Ç–æ–≤–æ! –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω—ã.")
