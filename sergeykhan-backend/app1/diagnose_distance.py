#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ —Å–∏—Å—Ç–µ–º—ã –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–∫–∏
"""

import os
import sys
import django
from datetime import datetime, timedelta
from decimal import Decimal

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append('/Users/alymbekovsabyr/bg projects/SergeykhanWebSite/sergeykhan-backend')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'app1.settings')
django.setup()

from api1.models import CustomUser, Order, DistanceSettingsModel
from api1.distancionka import (
    calculate_average_check,
    calculate_daily_revenue,
    calculate_net_turnover,
    check_distance_level,
    update_master_distance_status,
    get_visible_orders_for_master
)
from django.utils import timezone

def diagnose_distance_system():
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–∫–∏"""
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–∫–∏...")
    print("=" * 50)
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–∫–∏
    print("\n1Ô∏è‚É£ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–∫–∏:")
    settings = DistanceSettingsModel.get_settings()
    print(f"   - –°—Ä–µ–¥–Ω–∏–π —á–µ–∫ –¥–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–∫–∏: {settings.average_check_threshold} —Ä—É–±.")
    print(f"   - –ü–µ—Ä–∏–æ–¥ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–∫–∏: {settings.visible_period_standard} —á–∞—Å–æ–≤")
    print(f"   - –°—É–º–º–∞ –∑–∞–∫–∞–∑–æ–≤ –≤ —Å—É—Ç–∫–∏ –¥–ª—è —Å—É—Ç–æ—á–Ω–æ–π –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–∫–∏: {settings.daily_order_sum_threshold} —Ä—É–±.")
    print(f"   - –ß–∏—Å—Ç—ã–π –≤–∞–ª –∑–∞ 10 –¥–Ω–µ–π –¥–ª—è —Å—É—Ç–æ—á–Ω–æ–π –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–∫–∏: {settings.net_turnover_threshold} —Ä—É–±.")
    print(f"   - –ü–µ—Ä–∏–æ–¥ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Å—É—Ç–æ—á–Ω–æ–π –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–∫–∏: {settings.visible_period_daily} —á–∞—Å–æ–≤")
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ—Ö –º–∞—Å—Ç–µ—Ä–æ–≤
    print("\n2Ô∏è‚É£ –°—Ç–∞—Ç—É—Å –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–∫–∏ –º–∞—Å—Ç–µ—Ä–æ–≤:")
    masters = CustomUser.objects.filter(role='master')
    print(f"   –í—Å–µ–≥–æ –º–∞—Å—Ç–µ—Ä–æ–≤: {masters.count()}")
    
    for master in masters:
        print(f"\n   üìã –ú–∞—Å—Ç–µ—Ä: {master.email} (ID: {master.id})")
        print(f"      –¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–∫–∏: {master.dist}")
        print(f"      –†—É—á–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞: {master.distance_manual_override}")
        
        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        avg_check = calculate_average_check(master.id)
        daily_revenue = calculate_daily_revenue(master.id)
        net_turnover = calculate_net_turnover(master.id)
        calculated_level = check_distance_level(master.id)
        
        print(f"      üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"         - –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {avg_check} —Ä—É–±.")
        print(f"         - –î–æ—Ö–æ–¥ –∑–∞ 24 —á–∞—Å–∞: {daily_revenue} —Ä—É–±.")
        print(f"         - –ß–∏—Å—Ç—ã–π –≤–∞–ª –∑–∞ 10 –¥–Ω–µ–π: {net_turnover} —Ä—É–±.")
        print(f"         - –†–∞—Å—Å—á–∏—Ç–∞–Ω–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–∫–∏: {calculated_level}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏—è–º
        meets_standard = avg_check >= settings.average_check_threshold
        meets_daily_revenue = daily_revenue >= settings.daily_order_sum_threshold
        meets_daily_turnover = net_turnover >= settings.net_turnover_threshold
        
        print(f"      ‚úÖ –ö—Ä–∏—Ç–µ—Ä–∏–∏:")
        print(f"         - –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–∫–∞: {'‚úÖ' if meets_standard else '‚ùå'}")
        print(f"         - –°—É—Ç–æ—á–Ω–∞—è (–ø–æ –¥–æ—Ö–æ–¥—É): {'‚úÖ' if meets_daily_revenue else '‚ùå'}")
        print(f"         - –°—É—Ç–æ—á–Ω–∞—è (–ø–æ –≤–∞–ª—É): {'‚úÖ' if meets_daily_turnover else '‚ùå'}")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤–∏–¥–∏–º—ã–µ –∑–∞–∫–∞–∑—ã
        visible_orders = get_visible_orders_for_master(master.id)
        print(f"      üìù –í–∏–¥–∏–º—ã–µ –∑–∞–∫–∞–∑—ã: {visible_orders.count()}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–∫–∞–∑—ã –º–∞—Å—Ç–µ—Ä–∞
        master_orders = Order.objects.filter(assigned_master=master)
        print(f"      üì¶ –ó–∞–∫–∞–∑—ã –º–∞—Å—Ç–µ—Ä–∞: {master_orders.count()}")
        print(f"         - –ó–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ: {master_orders.filter(status='–∑–∞–≤–µ—Ä—à–µ–Ω').count()}")
        print(f"         - –í —Ä–∞–±–æ—Ç–µ: {master_orders.exclude(status__in=['–∑–∞–≤–µ—Ä—à–µ–Ω', '–æ—Ç–∫–ª–æ–Ω–µ–Ω']).count()}")
        
        if master_orders.exists():
            print(f"      üìÖ –ü–æ—Å–ª–µ–¥–Ω–∏–µ 3 –∑–∞–∫–∞–∑–∞:")
            for order in master_orders.order_by('-created_at')[:3]:
                print(f"         - ID:{order.id}, –°—Ç–∞—Ç—É—Å:{order.status}, –°—Ç–æ–∏–º–æ—Å—Ç—å:{order.final_cost or order.estimated_cost}, –î–∞—Ç–∞:{order.created_at.strftime('%Y-%m-%d %H:%M') if order.created_at else 'N/A'}")
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∑–∞–∫–∞–∑—ã
    print("\n3Ô∏è‚É£ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∑–∞–∫–∞–∑—ã:")
    available_orders = Order.objects.filter(
        status__in=['–Ω–æ–≤—ã–π', '–≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ'],
        assigned_master__isnull=True
    ).order_by('-created_at')
    
    print(f"   –í—Å–µ–≥–æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤: {available_orders.count()}")
    
    for order in available_orders[:5]:  # –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
        print(f"   üìã –ó–∞–∫–∞–∑ ID:{order.id}")
        print(f"      –ö–ª–∏–µ–Ω—Ç: {order.client_name}")
        print(f"      –°—Ç–∞—Ç—É—Å: {order.status}")
        print(f"      –°–æ–∑–¥–∞–Ω: {order.created_at.strftime('%Y-%m-%d %H:%M:%S') if order.created_at else 'N/A'}")
        print(f"      –°—Ç–æ–∏–º–æ—Å—Ç—å: {order.estimated_cost} —Ä—É–±.")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ç–æ –º–æ–∂–µ—Ç –≤–∏–¥–µ—Ç—å —ç—Ç–æ—Ç –∑–∞–∫–∞–∑
        can_see_masters = []
        for master in masters:
            visible_orders = get_visible_orders_for_master(master.id)
            if order in visible_orders:
                can_see_masters.append(f"{master.email} (dist:{master.dist})")
        
        print(f"      üëÄ –í–∏–¥—è—Ç –º–∞—Å—Ç–µ—Ä–∞: {', '.join(can_see_masters) if can_see_masters else '–ù–∏–∫—Ç–æ'}")
    
    # 4. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    print("\n4Ô∏è‚É£ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    masters_with_issues = []
    
    for master in masters:
        calculated_level = check_distance_level(master.id)
        if master.dist != calculated_level and not master.distance_manual_override:
            masters_with_issues.append(f"{master.email}: —Ç–µ–∫—É—â–∏–π {master.dist}, –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å {calculated_level}")
    
    if masters_with_issues:
        print("   ‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å —É—Ä–æ–≤–Ω—è–º–∏ –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–∫–∏:")
        for issue in masters_with_issues:
            print(f"      - {issue}")
        print("   üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å—ã –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–∫–∏ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å")
    else:
        print("   ‚úÖ –í—Å–µ —É—Ä–æ–≤–Ω–∏ –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –º–∞—Å—Ç–µ—Ä–∞ —Å —Å—É—Ç–æ—á–Ω–æ–π –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–∫–æ–π
    daily_masters = masters.filter(dist=2)
    if daily_masters.exists():
        print(f"\n   üìà –ú–∞—Å—Ç–µ—Ä–∞ —Å —Å—É—Ç–æ—á–Ω–æ–π –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–∫–æ–π ({daily_masters.count()}):")
        for master in daily_masters:
            visible_orders = get_visible_orders_for_master(master.id)
            print(f"      - {master.email}: –≤–∏–¥–∏—Ç {visible_orders.count()} –∑–∞–∫–∞–∑–æ–≤")
    else:
        print("\n   üìâ –ù–µ—Ç –º–∞—Å—Ç–µ—Ä–æ–≤ —Å —Å—É—Ç–æ—á–Ω–æ–π –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–∫–æ–π")

def update_all_masters():
    """–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å—ã –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–∫–∏ –¥–ª—è –≤—Å–µ—Ö –º–∞—Å—Ç–µ—Ä–æ–≤"""
    print("\nüîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤ –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–∫–∏...")
    masters = CustomUser.objects.filter(role='master')
    updated_count = 0
    
    for master in masters:
        old_level = master.dist
        if update_master_distance_status(master.id):
            master.refresh_from_db()
            print(f"   ‚úÖ {master.email}: {old_level} ‚Üí {master.dist}")
            updated_count += 1
        else:
            print(f"   ‚û°Ô∏è  {master.email}: {master.dist} (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)")
    
    print(f"\nüéØ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {updated_count} –∏–∑ {masters.count()} –º–∞—Å—Ç–µ—Ä–æ–≤")

if __name__ == "__main__":
    try:
        diagnose_distance_system()
        
        # –°–ø—Ä–∞—à–∏–≤–∞–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å—ã
        print("\n" + "="*50)
        response = input("–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å—ã –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–∫–∏ –¥–ª—è –≤—Å–µ—Ö –º–∞—Å—Ç–µ—Ä–æ–≤? (y/N): ")
        if response.lower() in ['y', 'yes', '–¥–∞']:
            update_all_masters()
            print("\nüîÑ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:")
            diagnose_distance_system()
        
        print("\n‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
