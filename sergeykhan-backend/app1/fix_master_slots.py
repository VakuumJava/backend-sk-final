#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—É —Å–æ —Å–ª–æ—Ç–∞–º–∏ –º–∞—Å—Ç–µ—Ä–∞
"""
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'app1.settings')
django.setup()

from api1.models import CustomUser, Order
from rest_framework.authtoken.models import Token

def fix_master_slots():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—É —Å–æ —Å–ª–æ—Ç–∞–º–∏ –º–∞—Å—Ç–µ—Ä–∞"""
    
    # –ù–∞–π–¥–µ–º –Ω–∞—à–µ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞
    try:
        master = CustomUser.objects.get(id=3, email='master1@test.com')
        print(f"üë§ –ù–∞–π–¥–µ–Ω –º–∞—Å—Ç–µ—Ä: {master.first_name} {master.last_name} (ID: {master.id})")
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º —Ç–µ–∫—É—â–∏–µ –∑–∞–∫–∞–∑—ã
        current_orders = Order.objects.filter(
            assigned_master=master,
            status__in=['–Ω–∞–∑–Ω–∞—á–µ–Ω', '–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è']
        )
        
        print(f"üìã –¢–µ–∫—É—â–∏–µ –∑–∞–∫–∞–∑—ã –º–∞—Å—Ç–µ—Ä–∞: {current_orders.count()}")
        for order in current_orders:
            print(f"  - –ó–∞–∫–∞–∑ #{order.id}: {order.client_name} ({order.status})")
        
        # –£–≤–µ–ª–∏—á–∏–º –ª–∏–º–∏—Ç –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –º–∞—Å—Ç–µ—Ä–∞
        if not hasattr(master, 'max_orders_per_day'):
            master.max_orders_per_day = 20  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ª–∏–º–∏—Ç
            master.save()
            print(f"‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏–º–∏—Ç –∑–∞–∫–∞–∑–æ–≤: {master.max_orders_per_day}")
        
        # –ò–ª–∏ –æ—Å–≤–æ–±–æ–¥–∏–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–∫–∞–∑–æ–≤
        if current_orders.count() >= 8:
            # –ó–∞–≤–µ—Ä—à–∏–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–∫–∞–∑–æ–≤
            orders_to_complete = current_orders[:3]
            for order in orders_to_complete:
                order.status = '–∑–∞–≤–µ—Ä—à–µ–Ω'
                order.save()
                print(f"‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω –∑–∞–∫–∞–∑ #{order.id}")
            
            print(f"üîÑ –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–æ {len(orders_to_complete)} —Å–ª–æ—Ç–æ–≤")
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –∑–∞–∫–∞–∑—ã
        remaining_orders = Order.objects.filter(
            assigned_master=master,
            status__in=['–Ω–∞–∑–Ω–∞—á–µ–Ω', '–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è']
        ).count()
        
        print(f"üìä –ò—Ç–æ–≥–æ:")
        print(f"  - –ù–∞–∑–Ω–∞—á–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤: {remaining_orders}")
        print(f"  - –°–≤–æ–±–æ–¥–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤: {getattr(master, 'max_orders_per_day', 8) - remaining_orders}")
        
        # –ü–æ–∫–∞–∂–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∑–∞–∫–∞–∑—ã –¥–ª—è –≤–∑—è—Ç–∏—è
        available_orders = Order.objects.filter(status='–Ω–æ–≤—ã–π')[:5]
        print(f"\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∑–∞–∫–∞–∑—ã –¥–ª—è –≤–∑—è—Ç–∏—è ({available_orders.count()}):")
        for order in available_orders:
            print(f"  - –ó–∞–∫–∞–∑ #{order.id}: {order.client_name} - {order.full_address}")
            
    except CustomUser.DoesNotExist:
        print("‚ùå –ú–∞—Å—Ç–µ—Ä —Å ID 3 –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    return True

if __name__ == "__main__":
    print("=== –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å–æ —Å–ª–æ—Ç–∞–º–∏ –º–∞—Å—Ç–µ—Ä–∞ ===")
    fix_master_slots()
