#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–∫–∏
"""

import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append('/Users/alymbekovsabyr/bg projects/SergeykhanWebSite/sergeykhan-backend/app1')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'app1.settings')
django.setup()

from api1.models import CustomUser, ProfitDistributionSettings, SystemLog
from api1.views import log_system_action

def test_system_log_functionality():
    """–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è...")
    
    # –°–æ–∑–¥–∞—ë–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try:
        user = CustomUser.objects.get(email='test_admin@test.com')
    except CustomUser.DoesNotExist:
        user = CustomUser.objects.create_user(
            email='test_admin@test.com',
            password='test123',
            role='super-admin'
        )
    print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.email}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º log_system_action
    print("üìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ log_system_action...")
    
    old_count = SystemLog.objects.count()
    
    log_system_action(
        action='percentage_settings_updated',
        performed_by=user,
        description='–¢–µ—Å—Ç–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–∏–±—ã–ª–∏',
        old_value='{"test": "old"}',
        new_value='{"test": "new"}',
        metadata={'test_run': True}
    )
    
    new_count = SystemLog.objects.count()
    
    if new_count > old_count:
        print("‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–π –ª–æ–≥ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –ª–æ–≥
        last_log = SystemLog.objects.latest('created_at')
        print(f"   üìã –î–µ–π—Å—Ç–≤–∏–µ: {last_log.action}")
        print(f"   üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {last_log.performed_by.email}")
        print(f"   üìù –û–ø–∏—Å–∞–Ω–∏–µ: {last_log.description}")
        print(f"   üìÖ –í—Ä–µ–º—è: {last_log.created_at}")
        
        return True
    else:
        print("‚ùå –°–∏—Å—Ç–µ–º–Ω—ã–π –ª–æ–≥ –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω!")
        return False

def test_profit_distribution_settings():
    """–¢–µ—Å—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–∏–±—ã–ª–∏"""
    print("\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–∏–±—ã–ª–∏...")
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    settings = ProfitDistributionSettings.get_settings()
    print(f"üìä –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
    print(f"   –ú–∞—Å—Ç–µ—Ä—É (–≤—ã–ø–ª–∞—á–µ–Ω–æ): {settings.master_paid_percent}%")
    print(f"   –ú–∞—Å—Ç–µ—Ä—É (–±–∞–ª–∞–Ω—Å): {settings.master_balance_percent}%")
    print(f"   –ö—É—Ä–∞—Ç–æ—Ä—É: {settings.curator_percent}%")
    print(f"   –ö–æ–º–ø–∞–Ω–∏–∏: {settings.company_percent}%")
    print(f"   –û–±—â–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç –º–∞—Å—Ç–µ—Ä–∞: {settings.total_master_percent}%")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏...")
    original_values = (
        settings.master_paid_percent,
        settings.master_balance_percent,
        settings.curator_percent,
        settings.company_percent
    )
    
    try:
        # –ü—ã—Ç–∞–µ–º—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è (—Å—É–º–º–∞ > 100%)
        settings.master_paid_percent = 60
        settings.master_balance_percent = 30
        settings.curator_percent = 20
        settings.company_percent = 10  # –°—É–º–º–∞ = 120%
        
        settings.clean()
        print("‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞!")
        return False
        
    except Exception as e:
        print(f"‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ: {e}")
        
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        settings.master_paid_percent = original_values[0]
        settings.master_balance_percent = original_values[1]
        settings.curator_percent = original_values[2]
        settings.company_percent = original_values[3]
        
        return True

def simulate_settings_update():
    """–°–∏–º—É–ª—è—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–∞–∫ –≤ views.py"""
    print("\nüîß –°–∏–º—É–ª—è—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫...")
    
    # –°–æ–∑–¥–∞—ë–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try:
        user = CustomUser.objects.get(email='test_admin@test.com')
    except CustomUser.DoesNotExist:
        user = CustomUser.objects.create_user(
            email='test_admin@test.com',
            password='test123',
            role='super-admin'
        )
    
    settings = ProfitDistributionSettings.get_settings()
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ä—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    old_settings = {
        'master_paid_percent': settings.master_paid_percent,
        'master_balance_percent': settings.master_balance_percent,
        'curator_percent': settings.curator_percent,
        'company_percent': settings.company_percent,
    }
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    new_data = {
        'master_paid_percent': 25,
        'master_balance_percent': 35,
        'curator_percent': 10,
        'company_percent': 30
    }
    
    for field, value in new_data.items():
        setattr(settings, field, value)
    
    settings.updated_by = user
    
    try:
        settings.clean()
        settings.save()
        
        # –°–æ–∑–¥–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        changes = []
        for field, old_value in old_settings.items():
            new_value = getattr(settings, field)
            if old_value != new_value:
                field_names = {
                    'master_paid_percent': '–ú–∞—Å—Ç–µ—Ä—É (–≤—ã–ø–ª–∞—á–µ–Ω–æ)',
                    'master_balance_percent': '–ú–∞—Å—Ç–µ—Ä—É (–±–∞–ª–∞–Ω—Å)',
                    'curator_percent': '–ö—É—Ä–∞—Ç–æ—Ä—É',
                    'company_percent': '–ö–æ–º–ø–∞–Ω–∏–∏'
                }
                changes.append(f"{field_names[field]}: {old_value}% ‚Üí {new_value}%")
        
        changes_description = "; ".join(changes) if changes else "–ò–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ –±—ã–ª–æ"
        
        # –õ–æ–≥–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ (–∑–¥–µ—Å—å —Ä–∞–Ω—å—à–µ –±—ã–ª–∞ –æ—à–∏–±–∫–∞!)
        print("üìù –°–æ–∑–¥–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ª–æ–≥–∞...")
        log_system_action(
            action='percentage_settings_updated',
            performed_by=user,
            description=f'–û–±–Ω–æ–≤–ª–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–∏–±—ã–ª–∏. –ò–∑–º–µ–Ω–µ–Ω–∏—è: {changes_description}',
            old_value=str(old_settings),
            new_value=str(new_data),
            metadata={'changes': changes}
        )
        
        print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!")
        print(f"üìù –ò–∑–º–µ–Ω–µ–Ω–∏—è: {changes_description}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
        return False

if __name__ == '__main__':
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã...")
    
    success = True
    
    # –¢–µ—Å—Ç 1: –°–∏—Å—Ç–µ–º–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    if not test_system_log_functionality():
        success = False
    
    # –¢–µ—Å—Ç 2: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–∏–±—ã–ª–∏
    if not test_profit_distribution_settings():
        success = False
    
    # –¢–µ—Å—Ç 3: –°–∏–º—É–ª—è—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
    if not simulate_settings_update():
        success = False
    
    if success:
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("‚úÖ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ 'IntegrityError: NOT NULL constraint failed: api1_orderlog.order_id' –ò–°–ü–†–ê–í–õ–ï–ù–ê!")
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–∏–±—ã–ª–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        print("‚úÖ –°–∏—Å—Ç–µ–º–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç!")
        print("‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ª–æ–≥–∏
        print("\nüìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ª–æ–≥–∏:")
        recent_logs = SystemLog.objects.order_by('-created_at')[:3]
        for i, log in enumerate(recent_logs, 1):
            print(f"   {i}. {log.action} - {log.performed_by.email if log.performed_by else '–°–∏—Å—Ç–µ–º–∞'}")
            print(f"      {log.description}")
            print(f"      {log.created_at.strftime('%Y-%m-%d %H:%M:%S')}")
            print()
    else:
        print("\n‚ùå –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´ –í –¢–ï–°–¢–ê–•!")
        sys.exit(1)
