#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ç–µ–∫—É—â–µ–π —Å–∏—Å—Ç–µ–º—ã —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–∏ –≤–æ–∑—Ä–∞—Å—Ç –∏–ª–∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –≤ –ª–æ–≥–∏–∫–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
"""

import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append('/Users/bekzhan/Documents/projects/sk/SergeyKhanWeb/sergeykhan-backend/app1')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'app1.settings')
django.setup()

from api1.models import Order, CustomUser

def test_order_distribution_logic():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ç–µ–∫—É—â—É—é –ª–æ–≥–∏–∫—É —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤"""
    
    print("üîç –¢–ï–°–¢ –°–ò–°–¢–ï–ú–´ –†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–Ø –ó–ê–ö–ê–ó–û–í")
    print("=" * 50)
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—è age –∏ priority –≤ –º–æ–¥–µ–ª–∏
    print("1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª–µ–π –≤ –º–æ–¥–µ–ª–∏ Order:")
    
    order_fields = [field.name for field in Order._meta.fields]
    
    if 'age' in order_fields:
        print("   ‚ùå –ü–æ–ª–µ 'age' (–≤–æ–∑—Ä–∞—Å—Ç) –ù–ê–ô–î–ï–ù–û –≤ –º–æ–¥–µ–ª–∏")
    else:
        print("   ‚úÖ –ü–æ–ª–µ 'age' (–≤–æ–∑—Ä–∞—Å—Ç) –ù–ï –Ω–∞–π–¥–µ–Ω–æ –≤ –º–æ–¥–µ–ª–∏")
        
    if 'priority' in order_fields:
        print("   ‚ùå –ü–æ–ª–µ 'priority' (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç) –ù–ê–ô–î–ï–ù–û –≤ –º–æ–¥–µ–ª–∏")
    else:
        print("   ‚úÖ –ü–æ–ª–µ 'priority' (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç) –ù–ï –Ω–∞–π–¥–µ–Ω–æ –≤ –º–æ–¥–µ–ª–∏")
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–∫–∞–∑—ã
    print("\n2. –ê–Ω–∞–ª–∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–∫–∞–∑–æ–≤:")
    orders = Order.objects.all()
    print(f"   üìä –í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤: {orders.count()}")
    
    if orders.exists():
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ª–∏ –ø–æ–ª—è age –∏ priority
        if 'age' in order_fields:
            orders_with_age = orders.exclude(age__isnull=True)
            print(f"   üìä –ó–∞–∫–∞–∑–æ–≤ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –≤–æ–∑—Ä–∞—Å—Ç–æ–º: {orders_with_age.count()}")
            
        if 'priority' in order_fields:
            high_priority_orders = orders.filter(priority__in=['–≤—ã—Å–æ–∫–∏–π', '—Å—Ä–æ—á–Ω—ã–π'])
            print(f"   üìä –ó–∞–∫–∞–∑–æ–≤ —Å –≤—ã—Å–æ–∫–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º: {high_priority_orders.count()}")
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∞—Å—Ç–µ—Ä–æ–≤
    print("\n3. –ê–Ω–∞–ª–∏–∑ –º–∞—Å—Ç–µ—Ä–æ–≤:")
    masters = CustomUser.objects.filter(role='master')
    print(f"   üë®‚Äçüîß –í—Å–µ–≥–æ –º–∞—Å—Ç–µ—Ä–æ–≤: {masters.count()}")
    
    return True

def check_current_distribution_endpoints():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–µ–∫—É—â–∏–µ endpoints —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è"""
    
    print("\n4. –¢–µ–∫—É—â–∏–µ endpoints —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è:")
    print("   üîó /api/workload/masters/ - –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–≥—Ä—É–∑–∫–∏ –º–∞—Å—Ç–µ—Ä–æ–≤")
    print("   üîó /api/availability/best-master/ - –ø–æ–∏—Å–∫ –ª—É—á—à–µ–≥–æ –º–∞—Å—Ç–µ—Ä–∞")
    print("   üîó /api/orders/{id}/assign-with-check/ - –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏")
    
    print("\n‚úÖ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:")
    print("   –°–∏—Å—Ç–µ–º–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ—Å–Ω–æ–≤–∞–Ω–∞ –¢–û–õ–¨–ö–û –Ω–∞:")
    print("   1. –ù–∞–≥—Ä—É–∑–∫–µ –º–∞—Å—Ç–µ—Ä–∞ (workload_percentage)")
    print("   2. –°–≤–æ–±–æ–¥–Ω—ã—Ö —Å–ª–æ—Ç–∞—Ö (free_slots)")
    print("   3. –î–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞ (created_at)")
    print("   \n   ‚ùå –í–æ–∑—Ä–∞—Å—Ç –∫–ª–∏–µ–Ω—Ç–∞ –∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∑–∞–∫–∞–∑–∞ –ù–ï –≤–ª–∏—è—é—Ç –Ω–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ!")

if __name__ == '__main__':
    try:
        test_order_distribution_logic()
        check_current_distribution_endpoints()
        print("\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É –ù–ï –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —Å–∏—Å—Ç–µ–º–µ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()
