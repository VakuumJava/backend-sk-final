#!/usr/bin/env python
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ –∑–∞—è–≤–∫–∞–º –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ä–æ–ª–µ–π
"""

import os
import django
from django.conf import settings

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'app1.settings')
django.setup()

from api1.models import CustomUser, FeedbackRequest
from rest_framework.authtoken.models import Token
import requests

API_BASE_URL = "http://127.0.0.1:8000"

def test_feedback_access():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ –∑–∞—è–≤–∫–∞–º –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏")
    print("=" * 60)
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Ä–∞–∑–Ω—ã—Ö —Ä–æ–ª–µ–π
    try:
        super_admin = CustomUser.objects.filter(role='super-admin').first()
        curator = CustomUser.objects.filter(role='curator').first()
        operator = CustomUser.objects.filter(role='operator').first()
        master = CustomUser.objects.filter(role='master').first()
        
        print(f"üëë Super Admin: {super_admin.email if super_admin else '–ù–µ –Ω–∞–π–¥–µ–Ω'}")
        print(f"üë®‚Äçüíº Curator: {curator.email if curator else '–ù–µ –Ω–∞–π–¥–µ–Ω'}")
        print(f"üìû Operator: {operator.email if operator else '–ù–µ –Ω–∞–π–¥–µ–Ω'}")
        print(f"üîß Master: {master.email if master else '–ù–µ –Ω–∞–π–¥–µ–Ω'}")
        print()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –¥–ª—è –∫–∞–∂–¥–æ–π —Ä–æ–ª–∏
        for user, role_name in [(super_admin, "Super Admin"), (curator, "Curator"), (operator, "Operator"), (master, "Master")]:
            if not user:
                print(f"‚ùå {role_name}: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
                continue
                
            # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º —Ç–æ–∫–µ–Ω
            token, created = Token.objects.get_or_create(user=user)
            
            print(f"üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è {role_name} ({user.email}):")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ –Ω–µ–ø—Ä–æ–∑–≤–æ–Ω–µ–Ω–Ω—ã–º –∑–∞—è–≤–∫–∞–º
            try:
                response = requests.get(
                    f"{API_BASE_URL}/feedback-requests/not-called/",
                    headers={'Authorization': f'Token {token.key}'}
                )
                print(f"  üìû –ù–µ–ø—Ä–æ–∑–≤–æ–Ω–µ–Ω–Ω—ã–µ: {response.status_code} - {len(response.json()) if response.status_code == 200 else '–û—à–∏–±–∫–∞'}")
            except Exception as e:
                print(f"  üìû –ù–µ–ø—Ä–æ–∑–≤–æ–Ω–µ–Ω–Ω—ã–µ: –û—à–∏–±–∫–∞ - {e}")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ –æ–±–∑–≤–æ–Ω–µ–Ω–Ω—ã–º –∑–∞—è–≤–∫–∞–º
            try:
                response = requests.get(
                    f"{API_BASE_URL}/feedback-requests/called/",
                    headers={'Authorization': f'Token {token.key}'}
                )
                print(f"  ‚òéÔ∏è –û–±–∑–≤–æ–Ω–µ–Ω–Ω—ã–µ: {response.status_code} - {len(response.json()) if response.status_code == 200 else '–û—à–∏–±–∫–∞'}")
            except Exception as e:
                print(f"  ‚òéÔ∏è –û–±–∑–≤–æ–Ω–µ–Ω–Ω—ã–µ: –û—à–∏–±–∫–∞ - {e}")
            
            print()
            
        # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        total_requests = FeedbackRequest.objects.count()
        not_called = FeedbackRequest.objects.filter(is_called=False).count()
        called = FeedbackRequest.objects.filter(is_called=True).count()
        
        print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞—è–≤–æ–∫:")
        print(f"  üìû –í—Å–µ–≥–æ –∑–∞—è–≤–æ–∫: {total_requests}")
        print(f"  üî¥ –ù–µ –æ–±–∑–≤–æ–Ω–µ–Ω–Ω—ã–µ: {not_called}")
        print(f"  üü¢ –û–±–∑–≤–æ–Ω–µ–Ω–Ω—ã–µ: {called}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")

if __name__ == "__main__":
    test_feedback_access()
