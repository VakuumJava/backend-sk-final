#!/usr/bin/env python3
"""
–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ–¥–æ–±—Ä–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –∫—É—Ä–∞—Ç–æ—Ä–æ–º
"""

import os
import sys
import django
import requests
import json
from decimal import Decimal

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append('/Users/alymbekovsabyr/bg projects/SergeykhanWebSite/sergeykhan-backend/app1')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'app1.settings')
django.setup()

from api1.models import *
from django.contrib.auth import authenticate
from rest_framework.authtoken.models import Token
from django.utils import timezone

def integration_test():
    print("üß™ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ–¥–æ–±—Ä–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞...")
    
    # API endpoint
    BASE_URL = "http://localhost:8001/api"
    
    try:
        # 1. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
        print("\n1Ô∏è‚É£ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
        
        # –ö—É—Ä–∞—Ç–æ—Ä
        curator_user, created = CustomUser.objects.get_or_create(
            email='curator_integration@example.com',
            defaults={
                'role': 'curator',
                'first_name': '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π',
                'last_name': '–ö—É—Ä–∞—Ç–æ—Ä'
            }
        )
        if created:
            curator_user.set_password('testpass123')
            curator_user.save()
        print(f"‚úÖ –ö—É—Ä–∞—Ç–æ—Ä: {curator_user.email}")
        
        # –ú–∞—Å—Ç–µ—Ä
        master_user, created = CustomUser.objects.get_or_create(
            email='master_integration@example.com',
            defaults={
                'role': 'master',
                'first_name': '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π',
                'last_name': '–ú–∞—Å—Ç–µ—Ä'
            }
        )
        if created:
            master_user.set_password('testpass123')
            master_user.save()
        print(f"‚úÖ –ú–∞—Å—Ç–µ—Ä: {master_user.email}")
        
        # 2. –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∫—É—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è API
        print("\n2Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
        token, created = Token.objects.get_or_create(user=curator_user)
        headers = {
            'Authorization': f'Token {token.key}',
            'Content-Type': 'application/json'
        }
        print(f"‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: {token.key[:10]}...")
        
        # 3. –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑ –∏ –µ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
        print("\n3Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞ –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...")
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–π ID –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
        import random
        random_id = random.randint(100000, 999999)
        
        order = Order.objects.create(
            id=random_id,
            client_name='–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç',
            client_phone='+7999999998',
            description='–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç –∑–∞–∫–∞–∑–∞',
            street='–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —É–ª–∏—Ü–∞',
            house_number='456',
            apartment='78',
            entrance='3',
            status='–∑–∞–≤–µ—Ä—à–µ–Ω',
            assigned_master=master_user,
            curator=curator_user,
            final_cost=Decimal('15000.00'),
            is_test=True
        )
        
        completion = OrderCompletion.objects.create(
            order=order,
            master=master_user,
            work_description='–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã',
            parts_expenses=Decimal('3000.00'),
            transport_costs=Decimal('500.00'),
            total_received=Decimal('15000.00'),
            completion_date=timezone.now(),
            status='–æ–∂–∏–¥–∞–µ—Ç_–ø—Ä–æ–≤–µ—Ä–∫–∏',
            curator_notes='',
        )
        
        print(f"‚úÖ –ó–∞–∫–∞–∑ #{order.id} —Å–æ–∑–¥–∞–Ω")
        print(f"‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ, ID: {completion.id}")
        print(f"   - –ß–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å: {completion.net_profit} —Ä—É–±.")
        
        # 4. –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –±–∞–ª–∞–Ω—Å—ã
        master_balance, _ = Balance.objects.get_or_create(user=master_user)
        curator_balance, _ = Balance.objects.get_or_create(user=curator_user)
        
        initial_master_amount = master_balance.amount
        initial_master_paid = master_balance.paid_amount
        initial_curator_amount = curator_balance.amount
        
        print(f"   - –ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å –º–∞—Å—Ç–µ—Ä–∞: {initial_master_amount} —Ä—É–±. (–Ω–∞ —Ä—É–∫–∏: {initial_master_paid})")
        print(f"   - –ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å –∫—É—Ä–∞—Ç–æ—Ä–∞: {initial_curator_amount} —Ä—É–±.")
        
        # 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º API –æ–¥–æ–±—Ä–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        print("\n4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º API –æ–¥–æ–±—Ä–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...")
        
        approve_url = f"{BASE_URL}/completions/{completion.id}/review/"
        approve_data = {
            'action': 'approve',
            'comment': '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç - –æ–¥–æ–±—Ä–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏'
        }
        
        print(f"–û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST –∑–∞–ø—Ä–æ—Å –Ω–∞: {approve_url}")
        print(f"–î–∞–Ω–Ω—ã–µ: {approve_data}")
        
        response = requests.post(
            approve_url,
            headers=headers,
            data=json.dumps(approve_data)
        )
        
        print(f"‚úÖ –û—Ç–≤–µ—Ç API: {response.status_code}")
        if response.status_code == 200:
            response_data = response.json()
            print(f"   –°—Ç–∞—Ç—É—Å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: {response_data.get('status')}")
            print(f"   –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: {response_data.get('is_distributed')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ API: {response.text}")
            return False
        
        # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–æ–≤
        print("\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–æ–≤...")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å—ã –∏–∑ –±–∞–∑—ã
        master_balance.refresh_from_db()
        curator_balance.refresh_from_db()
        completion.refresh_from_db()
        
        print(f"   - –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å –º–∞—Å—Ç–µ—Ä–∞: {master_balance.amount} —Ä—É–±. (–Ω–∞ —Ä—É–∫–∏: {master_balance.paid_amount})")
        print(f"   - –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å –∫—É—Ä–∞—Ç–æ—Ä–∞: {curator_balance.amount} —Ä—É–±.")
        print(f"   - –°—Ç–∞—Ç—É—Å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è: {completion.is_distributed}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        master_amount_change = master_balance.amount - initial_master_amount
        master_paid_change = master_balance.paid_amount - initial_master_paid
        curator_amount_change = curator_balance.amount - initial_curator_amount
        
        print(f"   - –ò–∑–º–µ–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –º–∞—Å—Ç–µ—Ä–∞: +{master_amount_change} —Ä—É–±.")
        print(f"   - –ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤—ã–ø–ª–∞—Ç –º–∞—Å—Ç–µ—Ä—É: +{master_paid_change} —Ä—É–±.")
        print(f"   - –ò–∑–º–µ–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –∫—É—Ä–∞—Ç–æ—Ä–∞: +{curator_amount_change} —Ä—É–±.")
        
        # 7. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ
        print("\n6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è...")
        
        settings = ProfitDistributionSettings.get_settings()
        expected_master_paid = completion.net_profit * Decimal(settings.master_paid_percent) / 100
        expected_master_balance = completion.net_profit * Decimal(settings.master_balance_percent) / 100
        expected_curator = completion.net_profit * Decimal(settings.curator_percent) / 100
        
        print(f"   –û–∂–∏–¥–∞–µ–º—ã–µ —Å—É–º–º—ã (—Å–æ–≥–ª–∞—Å–Ω–æ {settings.master_paid_percent}/{settings.master_balance_percent}/{settings.curator_percent}/{settings.company_percent}%):")
        print(f"   - –ú–∞—Å—Ç–µ—Ä—É –Ω–∞ —Ä—É–∫–∏: {expected_master_paid} —Ä—É–±.")
        print(f"   - –ú–∞—Å—Ç–µ—Ä—É –Ω–∞ –±–∞–ª–∞–Ω—Å: {expected_master_balance} —Ä—É–±.")
        print(f"   - –ö—É—Ä–∞—Ç–æ—Ä—É: {expected_curator} —Ä—É–±.")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω–æ—Å—Ç—å
        tolerance = Decimal('0.01')
        if abs(master_paid_change - expected_master_paid) < tolerance:
            print("   ‚úÖ –í—ã–ø–ª–∞—Ç–∞ –º–∞—Å—Ç–µ—Ä—É –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –≤ –≤—ã–ø–ª–∞—Ç–µ –º–∞—Å—Ç–µ—Ä—É: –æ–∂–∏–¥–∞–ª–∏ {expected_master_paid}, –ø–æ–ª—É—á–∏–ª–∏ {master_paid_change}")
            
        if abs(master_amount_change - expected_master_balance) < tolerance:
            print("   ‚úÖ –ë–∞–ª–∞–Ω—Å –º–∞—Å—Ç–µ—Ä–∞ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –≤ –±–∞–ª–∞–Ω—Å–µ –º–∞—Å—Ç–µ—Ä–∞: –æ–∂–∏–¥–∞–ª–∏ {expected_master_balance}, –ø–æ–ª—É—á–∏–ª–∏ {master_amount_change}")
            
        if abs(curator_amount_change - expected_curator) < tolerance:
            print("   ‚úÖ –ë–∞–ª–∞–Ω—Å –∫—É—Ä–∞—Ç–æ—Ä–∞ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –≤ –±–∞–ª–∞–Ω—Å–µ –∫—É—Ä–∞—Ç–æ—Ä–∞: –æ–∂–∏–¥–∞–ª–∏ {expected_curator}, –ø–æ–ª—É—á–∏–ª–∏ {curator_amount_change}")
        
        # 8. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
        print("\n7Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π...")
        
        master_transactions = FinancialTransaction.objects.filter(
            user=master_user,
            order_completion=completion
        ).count()
        
        curator_transactions = FinancialTransaction.objects.filter(
            user=curator_user,
            order_completion=completion
        ).count()
        
        print(f"   - –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –º–∞—Å—Ç–µ—Ä–∞: {master_transactions}")
        print(f"   - –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∫—É—Ä–∞—Ç–æ—Ä–∞: {curator_transactions}")
        
        if master_transactions >= 1 and curator_transactions >= 1:
            print("   ‚úÖ –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω—ã")
        else:
            print("   ‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –Ω–µ —Å–æ–∑–¥–∞–Ω—ã")
        
        print("\nüéâ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–∏–±—ã–ª–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —á–µ—Ä–µ–∑ API!")
        return True
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    integration_test()
