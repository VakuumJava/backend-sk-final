#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö API endpoints –¥–ª—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏–±—ã–ª–∏ –º–∞—Å—Ç–µ—Ä–æ–≤.
"""

import os
import sys
import django
import json
import requests
from decimal import Decimal

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'app1.settings')
django.setup()

from api1.models import CustomUser, MasterProfitSettings, ProfitDistributionSettings, Order
from django.contrib.auth.tokens import default_token_generator
from rest_framework.authtoken.models import Token

def create_test_data():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    print("üìã –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
    
    # –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    admin, created = CustomUser.objects.get_or_create(
        email='admin@test.com',
        defaults={
            'role': 'super-admin',
            'first_name': '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
            'last_name': '–¢–µ—Å—Ç–æ–≤—ã–π'
        }
    )
    if created:
        admin.set_password('admin123')
        admin.save()
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω –∞–¥–º–∏–Ω: {admin.email}")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –º–∞—Å—Ç–µ—Ä–æ–≤
    masters = []
    for i in range(1, 4):
        master, created = CustomUser.objects.get_or_create(
            email=f'master{i}@test.com',
            defaults={
                'role': 'master',
                'first_name': f'–ú–∞—Å—Ç–µ—Ä',
                'last_name': f'–¢–µ—Å—Ç–æ–≤—ã–π{i}'
            }
        )
        if created:
            master.set_password('master123')
            master.save()
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω –º–∞—Å—Ç–µ—Ä: {master.email}")
        masters.append(master)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–æ–∫–µ–Ω –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    token, created = Token.objects.get_or_create(user=admin)
    print(f"üîë –¢–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∞: {token.key}")
    
    # –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
    global_settings = ProfitDistributionSettings.get_settings()
    print(f"‚öôÔ∏è –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {global_settings.master_paid_percent}% –≤—ã–ø–ª–∞—Ç–∞, {global_settings.master_balance_percent}% –±–∞–ª–∞–Ω—Å")
    
    return admin, masters, token.key

def test_api_endpoints(token, masters):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints...")
    
    base_url = 'http://127.0.0.1:8000/api1'
    headers = {'Authorization': f'Token {token}', 'Content-Type': 'application/json'}
    
    # –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –º–∞—Å—Ç–µ—Ä–æ–≤ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    print("\n1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –º–∞—Å—Ç–µ—Ä–æ–≤ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏...")
    try:
        response = requests.get(f'{base_url}/api/profit-settings/masters/', headers=headers)
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {data['total_count']} –º–∞—Å—Ç–µ—Ä–æ–≤")
            for master in data['masters'][:2]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã—Ö 2
                print(f"   - {master['name']}: –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ = {master['has_individual_settings']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code} - {response.text}")
    except requests.exceptions.ConnectionError:
        print("‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ 'python manage.py runserver' –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API")
        return False
    
    # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞
    master_id = masters[0].id
    print(f"\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –º–∞—Å—Ç–µ—Ä–∞ ID={master_id}...")
    try:
        response = requests.get(f'{base_url}/api/profit-settings/master/{master_id}/', headers=headers)
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞—Å—Ç–µ—Ä–∞ {data['master_name']}")
            print(f"   - –í—ã–ø–ª–∞—Ç–∞: {data['settings']['master_paid_percent']}%")
            print(f"   - –ë–∞–ª–∞–Ω—Å: {data['settings']['master_balance_percent']}%")
            print(f"   - –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ: {data['settings']['is_individual']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code} - {response.text}")
    except requests.exceptions.ConnectionError:
        print("‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω")
        return False
    
    # –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è –º–∞—Å—Ç–µ—Ä–∞
    print(f"\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è –º–∞—Å—Ç–µ—Ä–∞ ID={master_id}...")
    try:
        settings_data = {
            'master_paid_percent': 35,
            'master_balance_percent': 25,
            'curator_percent': 10,
            'company_percent': 30,
            'is_active': True
        }
        response = requests.post(
            f'{base_url}/api/profit-settings/master/{master_id}/set/', 
            headers=headers,
            data=json.dumps(settings_data)
        )
        if response.status_code in [200, 201]:
            data = response.json()
            print(f"‚úÖ {data['message']}")
            print(f"   - –°–æ–∑–¥–∞–Ω–æ: {data.get('created', False)}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code} - {response.text}")
    except requests.exceptions.ConnectionError:
        print("‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω")
        return False
    
    # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å
    print(f"\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫...")
    try:
        response = requests.get(f'{base_url}/api/profit-settings/master/{master_id}/', headers=headers)
        if response.status_code == 200:
            data = response.json()
            if data['settings']['is_individual']:
                print(f"‚úÖ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–∫—Ç–∏–≤–Ω—ã!")
                print(f"   - –í—ã–ø–ª–∞—Ç–∞: {data['settings']['master_paid_percent']}%")
                print(f"   - –ë–∞–ª–∞–Ω—Å: {data['settings']['master_balance_percent']}%")
            else:
                print("‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å –∫–∞–∫ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code} - {response.text}")
    except requests.exceptions.ConnectionError:
        print("‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω")
        return False
    
    return True

def test_local_logic():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –±–µ–∑ –∑–∞–ø—É—â–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞"""
    print("\nüî¨ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–π –ª–æ–≥–∏–∫–∏...")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞
        master = CustomUser.objects.filter(role='master').first()
        if not master:
            print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –º–∞—Å—Ç–µ—Ä–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            return
        
        print(f"üìã –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–∞—Å—Ç–µ—Ä–∞: {master.email}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–æ —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö
        settings = MasterProfitSettings.get_settings_for_master(master)
        print(f"   –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {settings['is_individual']} - {settings['master_paid_percent']}%/{settings['master_balance_percent']}%")
        
        # –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        individual_settings, created = MasterProfitSettings.objects.get_or_create(
            master=master,
            defaults={
                'master_paid_percent': 40,
                'master_balance_percent': 25,
                'curator_percent': 10,
                'company_percent': 25,
                'is_active': True
            }
        )
        
        if created:
            print("‚úÖ –°–æ–∑–¥–∞–Ω—ã –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
        else:
            print("‚ÑπÔ∏è –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö
        settings = MasterProfitSettings.get_settings_for_master(master)
        print(f"   –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {settings['is_individual']} - {settings['master_paid_percent']}%/{settings['master_balance_percent']}%")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è –∑–∞–∫–∞–∑–∞
        order = Order.objects.filter(assigned_master=master).first()
        if order:
            order_settings = order.get_profit_settings()
            print(f"   –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∑–∞–∫–∞–∑–∞ #{order.id}: {order_settings['is_individual']} - {order_settings['master_paid_percent']}%/{order_settings['master_balance_percent']}%")
        else:
            print("‚ÑπÔ∏è –ó–∞–∫–∞–∑—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞")
        
        print("‚úÖ –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")

def main():
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏–±—ã–ª–∏ –º–∞—Å—Ç–µ—Ä–æ–≤")
    print("=" * 70)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    admin, masters, token = create_test_data()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É
    test_local_logic()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API endpoints
    api_works = test_api_endpoints(token, masters)
    
    print("\n" + "=" * 70)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print("‚úÖ –ú–æ–¥–µ–ª–∏ –∏ –º–∏–≥—Ä–∞—Ü–∏–∏: OK")
    print("‚úÖ –õ–æ–∫–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞: OK")
    
    if api_works:
        print("‚úÖ API endpoints: OK")
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("‚ö†Ô∏è API endpoints: –¢—Ä–µ–±—É–µ—Ç—Å—è –∑–∞–ø—É—â–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä")
        print("\nüí° –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—É—Å—Ç–∏—Ç–µ:")
        print("   python manage.py runserver")
        print("   python test_master_profit_api.py")

if __name__ == '__main__':
    main()
