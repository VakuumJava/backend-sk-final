
import os
import sys
import django
from decimal import Decimal

sys.path.append('/Users/alymbekovsabyr/bg projects/SergeykhanWebSite/sergeykhan-backend/app1')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'app1.settings')
django.setup()

from api1.models import *
from api1.views import distribute_completion_funds

def test_profit_distribution():
    print("üîß –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–∏–±—ã–ª–∏...")
    
    try:
        print("\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã...")
        settings = ProfitDistributionSettings.get_settings()
        if not settings:
            print("‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ...")
            settings = ProfitDistributionSettings.objects.create(
                master_paid_percent=Decimal('60'),
                master_balance_percent=Decimal('20'), 
                company_percent=Decimal('20')
            )
        
        print(f"‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞–π–¥–µ–Ω—ã:")
        print(f"   - –ú–∞—Å—Ç–µ—Ä—É –Ω–∞ —Ä—É–∫–∏: {settings.master_paid_percent}%")
        print(f"   - –ú–∞—Å—Ç–µ—Ä—É –Ω–∞ –±–∞–ª–∞–Ω—Å: {settings.master_balance_percent}%") 
        print(f"   - –ö–æ–º–ø–∞–Ω–∏–∏: {settings.company_percent}%")
        
        # 2. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        print("\n2Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
        
        # –ú–∞—Å—Ç–µ—Ä
        master_user, created = CustomUser.objects.get_or_create(
            email='master@test.com',
            defaults={
                'user_type': 'master',
                'first_name': '–¢–µ—Å—Ç',
                'last_name': '–ú–∞—Å—Ç–µ—Ä'
            }
        )
        if created:
            master_user.set_password('testpass')
            master_user.save()
        print(f"‚úÖ –ú–∞—Å—Ç–µ—Ä: {master_user.email}")
        
        # –ö—É—Ä–∞—Ç–æ—Ä
        curator_user, created = CustomUser.objects.get_or_create(
            email='curator@test.com',
            defaults={
                'user_type': 'curator',
                'first_name': '–¢–µ—Å—Ç',
                'last_name': '–ö—É—Ä–∞—Ç–æ—Ä'
            }
        )
        if created:
            curator_user.set_password('testpass')
            curator_user.save()
        print(f"‚úÖ –ö—É—Ä–∞—Ç–æ—Ä: {curator_user.email}")
        
        # 3. –°–æ–∑–¥–∞–µ–º –±–∞–ª–∞–Ω—Å—ã
        print("\n3Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º –±–∞–ª–∞–Ω—Å—ã...")
        
        master_balance, created = Balance.objects.get_or_create(
            user=master_user,
            defaults={'amount': Decimal('0'), 'paid_amount': Decimal('0')}
        )
        print(f"‚úÖ –ë–∞–ª–∞–Ω—Å –º–∞—Å—Ç–µ—Ä–∞: {master_balance.amount} —Ä—É–±. (–Ω–∞ —Ä—É–∫–∏: {master_balance.paid_amount})")
        
        curator_balance, created = Balance.objects.get_or_create(
            user=curator_user,
            defaults={'amount': Decimal('0'), 'paid_amount': Decimal('0')}
        )
        print(f"‚úÖ –ë–∞–ª–∞–Ω—Å –∫—É—Ä–∞—Ç–æ—Ä–∞: {curator_balance.amount} —Ä—É–±.")
        
        company_balance, created = Balance.objects.get_or_create(
            user_id=1,  # –°–∏—Å—Ç–µ–º–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è –∫–æ–º–ø–∞–Ω–∏–∏
            defaults={'amount': Decimal('0'), 'paid_amount': Decimal('0')}
        )
        print(f"‚úÖ –ë–∞–ª–∞–Ω—Å –∫–æ–º–ø–∞–Ω–∏–∏: {company_balance.amount} —Ä—É–±.")
        
        # 4. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑
        print("\n4Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑...")
        
        order, created = Order.objects.get_or_create(
            id=9999,
            defaults={
                'customer_name': '–¢–µ—Å—Ç–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç',
                'customer_phone': '+7999999999',
                'address': '–¢–µ—Å—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å',
                'price': Decimal('1000'),
                'master': master_user,
                'curator': curator_user,
                'status': 'completed'
            }
        )
        if not created:
            order.price = Decimal('1000')
            order.master = master_user
            order.curator = curator_user
            order.status = 'completed'
            order.save()
            
        print(f"‚úÖ –ó–∞–∫–∞–∑ #{order.id} –Ω–∞ —Å—É–º–º—É {order.price} —Ä—É–±.")
        
        # 5. –°–æ–∑–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
        print("\n5Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞...")
        
        completion, created = OrderCompletion.objects.get_or_create(
            order=order,
            defaults={
                'master': master_user,
                'status': 'pending',
                'description': '–¢–µ—Å—Ç–æ–≤–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ'
            }
        )
        print(f"‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ, —Å—Ç–∞—Ç—É—Å: {completion.status}")
        
        # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—á–µ—Ç —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
        print("\n6Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞—Å—á–µ—Ç —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è...")
        
        distribution = completion.calculate_distribution()
        print(f"‚úÖ –†–∞—Å—á–µ—Ç–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ:")
        print(f"   - –ú–∞—Å—Ç–µ—Ä—É –Ω–∞ —Ä—É–∫–∏: {distribution['master_immediate']} —Ä—É–±.")
        print(f"   - –ú–∞—Å—Ç–µ—Ä—É –Ω–∞ –±–∞–ª–∞–Ω—Å: {distribution['master_balance']} —Ä—É–±.")
        print(f"   - –ö—É—Ä–∞—Ç–æ—Ä—É: {distribution['curator_amount']} —Ä—É–±.")
        print(f"   - –ö–æ–º–ø–∞–Ω–∏–∏: {distribution['company_amount']} —Ä—É–±.")
        print(f"   - –í—Å–µ–≥–æ: {distribution['master_immediate'] + distribution['master_balance'] + distribution['curator_amount'] + distribution['company_amount']} —Ä—É–±.")
        
        # 7. –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –±–∞–ª–∞–Ω—Å—ã
        print("\n7Ô∏è‚É£ –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –±–∞–ª–∞–Ω—Å—ã...")
        initial_master_amount = master_balance.amount
        initial_master_paid = master_balance.paid_amount
        initial_curator_amount = curator_balance.amount
        initial_company_amount = company_balance.amount
        
        print(f"üìä –ù–∞—á–∞–ª—å–Ω—ã–µ –±–∞–ª–∞–Ω—Å—ã:")
        print(f"   - –ú–∞—Å—Ç–µ—Ä (–±–∞–ª–∞–Ω—Å): {initial_master_amount} —Ä—É–±.")
        print(f"   - –ú–∞—Å—Ç–µ—Ä (–Ω–∞ —Ä—É–∫–∏): {initial_master_paid} —Ä—É–±.")
        print(f"   - –ö—É—Ä–∞—Ç–æ—Ä: {initial_curator_amount} —Ä—É–±.")
        print(f"   - –ö–æ–º–ø–∞–Ω–∏—è: {initial_company_amount} —Ä—É–±.")
        
        # 8. –í—ã–ø–æ–ª–Ω—è–µ–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ
        print("\n8Ô∏è‚É£ –í—ã–ø–æ–ª–Ω—è–µ–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤...")
        
        result = distribute_completion_funds(completion)
        print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç —Ñ—É–Ω–∫—Ü–∏–∏ distribute_completion_funds: {result}")
        
        # 9. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Ç–æ–≥–æ–≤—ã–µ –±–∞–ª–∞–Ω—Å—ã
        print("\n9Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Ç–æ–≥–æ–≤—ã–µ –±–∞–ª–∞–Ω—Å—ã...")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–î
        master_balance.refresh_from_db()
        curator_balance.refresh_from_db()
        company_balance.refresh_from_db()
        
        print(f"üìä –ò—Ç–æ–≥–æ–≤—ã–µ –±–∞–ª–∞–Ω—Å—ã:")
        print(f"   - –ú–∞—Å—Ç–µ—Ä (–±–∞–ª–∞–Ω—Å): {master_balance.amount} —Ä—É–±. (–∏–∑–º–µ–Ω–µ–Ω–∏–µ: +{master_balance.amount - initial_master_amount})")
        print(f"   - –ú–∞—Å—Ç–µ—Ä (–Ω–∞ —Ä—É–∫–∏): {master_balance.paid_amount} —Ä—É–±. (–∏–∑–º–µ–Ω–µ–Ω–∏–µ: +{master_balance.paid_amount - initial_master_paid})")
        print(f"   - –ö—É—Ä–∞—Ç–æ—Ä: {curator_balance.amount} —Ä—É–±. (–∏–∑–º–µ–Ω–µ–Ω–∏–µ: +{curator_balance.amount - initial_curator_amount})")
        print(f"   - –ö–æ–º–ø–∞–Ω–∏—è: {company_balance.amount} —Ä—É–±. (–∏–∑–º–µ–Ω–µ–Ω–∏–µ: +{company_balance.amount - initial_company_amount})")
        
        # 10. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
        print("\nüîü –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è...")
        
        master_total_change = (master_balance.amount - initial_master_amount) + (master_balance.paid_amount - initial_master_paid)
        curator_change = curator_balance.amount - initial_curator_amount
        company_change = company_balance.amount - initial_company_amount
        total_distributed = master_total_change + curator_change + company_change
        
        print(f"üìà –ò–∑–º–µ–Ω–µ–Ω–∏—è:")
        print(f"   - –ú–∞—Å—Ç–µ—Ä (–æ–±—â–µ–µ): {master_total_change} —Ä—É–±.")
        print(f"   - –ö—É—Ä–∞—Ç–æ—Ä: {curator_change} —Ä—É–±.")
        print(f"   - –ö–æ–º–ø–∞–Ω–∏—è: {company_change} —Ä—É–±.")
        print(f"   - –í—Å–µ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–æ: {total_distributed} —Ä—É–±.")
        print(f"   - –¶–µ–Ω–∞ –∑–∞–∫–∞–∑–∞: {order.price} —Ä—É–±.")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ
        if abs(total_distributed - order.price) < Decimal('0.01'):
            print("‚úÖ –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ: —Å—É–º–º–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ü–µ–Ω–µ –∑–∞–∫–∞–∑–∞")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è: —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–æ {total_distributed}, –∞ –¥–æ–ª–∂–Ω–æ {order.price}")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–ø–æ—Ä—Ü–∏–∏
        expected_master_immediate = order.price * settings.master_paid_percent / 100
        expected_master_balance = order.price * settings.master_balance_percent / 100
        expected_company = order.price * settings.company_percent / 100
        
        master_immediate_change = master_balance.paid_amount - initial_master_paid
        master_balance_change = master_balance.amount - initial_master_amount
        
        print(f"\nüìê –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–ø–æ—Ä—Ü–∏–π:")
        print(f"   - –ú–∞—Å—Ç–µ—Ä—É –Ω–∞ —Ä—É–∫–∏: –æ–∂–∏–¥–∞–µ—Ç—Å—è {expected_master_immediate}, –ø–æ–ª—É—á–µ–Ω–æ {master_immediate_change}")
        print(f"   - –ú–∞—Å—Ç–µ—Ä—É –Ω–∞ –±–∞–ª–∞–Ω—Å: –æ–∂–∏–¥–∞–µ—Ç—Å—è {expected_master_balance}, –ø–æ–ª—É—á–µ–Ω–æ {master_balance_change}")
        print(f"   - –ö–æ–º–ø–∞–Ω–∏–∏: –æ–∂–∏–¥–∞–µ—Ç—Å—è {expected_company}, –ø–æ–ª—É—á–µ–Ω–æ {company_change}")
        
        # 11. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        print("\n1Ô∏è‚É£1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...")
        completion.refresh_from_db()
        print(f"‚úÖ –°—Ç–∞—Ç—É—Å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: {completion.status}")
        
        print("\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_profit_distribution()
