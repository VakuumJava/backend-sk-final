#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–∏–±—ã–ª–∏
"""

import os
import sys
import django
import requests
import json

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append('/Users/alymbekovsabyr/bg projects/SergeykhanWebSite/sergeykhan-backend/app1')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'app1.settings')
django.setup()

from django.contrib.auth import authenticate
from rest_framework.authtoken.models import Token
from api1.models import CustomUser, ProfitDistributionSettings, SystemLog

def test_profit_distribution_api():
    """–¢–µ—Å—Ç API –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–∏–±—ã–ª–∏"""
    
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–∏–±—ã–ª–∏...")
    
    # 1. –°–æ–∑–¥–∞—ë–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞
    print("1. –°–æ–∑–¥–∞–Ω–∏–µ/–ø–æ–ª—É—á–µ–Ω–∏–µ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞...")
    try:
        super_admin = CustomUser.objects.get(email='super_admin@test.com')
        print(f"   ‚úÖ –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω –Ω–∞–π–¥–µ–Ω: {super_admin.email}")
    except CustomUser.DoesNotExist:
        super_admin = CustomUser.objects.create_user(
            email='super_admin@test.com',
            password='admin123',
            role='super-admin'
        )
        print(f"   ‚úÖ –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω —Å–æ–∑–¥–∞–Ω: {super_admin.email}")
    
    # 2. –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
    token, created = Token.objects.get_or_create(user=super_admin)
    print(f"   ‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: {token.key[:20]}...")
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    print("\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫...")
    url = 'http://127.0.0.1:8000/api/profit-distribution/'
    headers = {'Authorization': f'Token {token.key}'}
    
    try:
        response = requests.get(url, headers=headers)
        if response.status_code == 200:
            current_settings = response.json()
            print("   ‚úÖ –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—É—á–µ–Ω—ã:")
            for key, value in current_settings.items():
                if key.endswith('_percent'):
                    print(f"      {key}: {value}%")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫: {response.status_code}")
            print(f"      {response.text}")
            return False
    except requests.exceptions.ConnectionError:
        print("   ‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: python3 manage.py runserver")
        return False
    
    # 4. –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    print("\n3. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫...")
    new_settings = {
        'master_paid_percent': 25,
        'master_balance_percent': 35,
        'curator_percent': 10,
        'company_percent': 30
    }
    
    response = requests.put(url, headers=headers, json=new_settings)
    if response.status_code == 200:
        result = response.json()
        print("   ‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!")
        print(f"   üìù –ò–∑–º–µ–Ω–µ–Ω–∏—è: {result.get('changes', '–ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π')}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–∏—Å—Ç–µ–º–Ω—ã–π –ª–æ–≥ —Å–æ–∑–¥–∞–ª—Å—è
        print("\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ª–æ–≥–∞...")
        system_logs = SystemLog.objects.filter(
            action='percentage_settings_updated',
            performed_by=super_admin
        ).order_by('-created_at')[:1]
        
        if system_logs.exists():
            log = system_logs.first()
            print(f"   ‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–π –ª–æ–≥ —Å–æ–∑–¥–∞–Ω: {log.description}")
            print(f"   üìÖ –í—Ä–µ–º—è: {log.created_at}")
        else:
            print("   ‚ùå –°–∏—Å—Ç–µ–º–Ω—ã–π –ª–æ–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return False
            
    else:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {response.status_code}")
        print(f"      {response.text}")
        return False
    
    # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é (—Å—É–º–º–∞ –Ω–µ —Ä–∞–≤–Ω–∞ 100%)
    print("\n5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ (–Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ)...")
    invalid_settings = {
        'master_paid_percent': 40,
        'master_balance_percent': 40,
        'curator_percent': 10,
        'company_percent': 20  # –°—É–º–º–∞ = 110%
    }
    
    response = requests.put(url, headers=headers, json=invalid_settings)
    if response.status_code == 400:
        error_data = response.json()
        print("   ‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        print(f"   üìù –û—à–∏–±–∫–∞: {error_data.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
    else:
        print(f"   ‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞! –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"      {response.text}")
        return False
    
    print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    print("‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–∏–±—ã–ª–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    print("‚úÖ –°–∏—Å—Ç–µ–º–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç!")
    print("‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç!")
    
    return True

def test_database_direct():
    """–ü—Ä—è–º–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ Django ORM"""
    print("\nüîß –ü—Ä—è–º–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ Django ORM...")
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    settings = ProfitDistributionSettings.get_settings()
    print(f"–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {settings.master_paid_percent}%, {settings.master_balance_percent}%, {settings.curator_percent}%, {settings.company_percent}%")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é
    try:
        settings.master_paid_percent = 50
        settings.master_balance_percent = 50
        settings.curator_percent = 10
        settings.company_percent = 10  # –°—É–º–º–∞ = 120%
        settings.clean()
        print("‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞!")
        return False
    except Exception as e:
        print(f"‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç: {e}")
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    settings.master_paid_percent = 30
    settings.master_balance_percent = 30
    settings.curator_percent = 5
    settings.company_percent = 35
    settings.save()
    
    print("‚úÖ –ü—Ä—è–º–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–π–¥–µ–Ω–æ!")
    return True

if __name__ == '__main__':
    print("üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–∏–±—ã–ª–∏...")
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ ORM
    if not test_database_direct():
        sys.exit(1)
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ API
    if not test_profit_distribution_api():
        sys.exit(1)
    
    print("\nüéØ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
    print("–°–∏—Å—Ç–µ–º–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–∏–±—ã–ª–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –∏ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
