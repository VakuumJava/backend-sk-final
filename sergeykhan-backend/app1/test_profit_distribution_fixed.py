#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–∏–±—ã–ª–∏
"""

import os
import sys
import django
from decimal import Decimal

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append('/Users/alymbekovsabyr/bg projects/SergeykhanWebSite/sergeykhan-backend/app1')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'app1.settings')
django.setup()

from api1.models import *
from api1.views import distribute_completion_funds
from django.utils import timezone

def test_profit_distribution():
    print("üîß –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–∏–±—ã–ª–∏...")
    
    try:
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        print("\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã...")
        settings = ProfitDistributionSettings.get_settings()
        if not settings:
            print("‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ...")
            settings = ProfitDistributionSettings.objects.create(
                master_paid_percent=60,
                master_balance_percent=20,
                company_percent=20
            )
        else:
            # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            print("üìù –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∞...")
            settings.master_paid_percent = 60
            settings.master_balance_percent = 20
            settings.curator_percent = 5
            settings.company_percent = 15
            settings.save()
        
        print(f"‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞–π–¥–µ–Ω—ã:")
        print(f"   - –ú–∞—Å—Ç–µ—Ä—É –Ω–∞ —Ä—É–∫–∏: {settings.master_paid_percent}%")
        print(f"   - –ú–∞—Å—Ç–µ—Ä—É –Ω–∞ –±–∞–ª–∞–Ω—Å: {settings.master_balance_percent}%") 
        print(f"   - –ö–æ–º–ø–∞–Ω–∏–∏: {settings.company_percent}%")
        
        # 2. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        print("\n2Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
        
        # –ú–∞—Å—Ç–µ—Ä
        master_user, created = CustomUser.objects.get_or_create(
            email='master_test@example.com',
            defaults={
                'role': 'master',
                'first_name': '–¢–µ—Å—Ç',
                'last_name': '–ú–∞—Å—Ç–µ—Ä'
            }
        )
        if created:
            master_user.set_password('testpass')
            master_user.save()
        print(f"‚úÖ –ú–∞—Å—Ç–µ—Ä: {master_user.email}")
        
        # –ö—É—Ä–∞—Ç–æ—Ä
        curator_user, created = CustomUser.objects.get_or_create(
            email='curator_test@example.com',
            defaults={
                'role': 'curator',
                'first_name': '–¢–µ—Å—Ç',
                'last_name': '–ö—É—Ä–∞—Ç–æ—Ä'
            }
        )
        if created:
            curator_user.set_password('testpass')
            curator_user.save()
        print(f"‚úÖ –ö—É—Ä–∞—Ç–æ—Ä: {curator_user.email}")
        
        # 3. –°–æ–∑–¥–∞–µ–º –±–∞–ª–∞–Ω—Å—ã
        print("\n3Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º –±–∞–ª–∞–Ω—Å—ã...")
        
        master_balance, created = Balance.objects.get_or_create(
            user=master_user,
            defaults={'amount': Decimal('0'), 'paid_amount': Decimal('0')}
        )
        print(f"‚úÖ –ë–∞–ª–∞–Ω—Å –º–∞—Å—Ç–µ—Ä–∞: {master_balance.amount} —Ä—É–±. (–Ω–∞ —Ä—É–∫–∏: {master_balance.paid_amount})")
        
        curator_balance, created = Balance.objects.get_or_create(
            user=curator_user,
            defaults={'amount': Decimal('0'), 'paid_amount': Decimal('0')}
        )
        print(f"‚úÖ –ë–∞–ª–∞–Ω—Å –∫—É—Ä–∞—Ç–æ—Ä–∞: {curator_balance.amount} —Ä—É–±.")
        
        # 4. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑
        print("\n4Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑...")
        
        order, created = Order.objects.get_or_create(
            id=9999,
            defaults={
                'client_name': '–¢–µ—Å—Ç–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç',
                'client_phone': '+7999999999',
                'description': '–¢–µ—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞',
                'street': '–¢–µ—Å—Ç–æ–≤–∞—è —É–ª–∏—Ü–∞',
                'house_number': '123',
                'apartment': '45',
                'entrance': '2',
                'status': '–∑–∞–≤–µ—Ä—à–µ–Ω',
                'assigned_master': master_user,
                'curator': curator_user,
                'final_cost': Decimal('10000.00'),
                'is_test': True
            }
        )
        if not created:
            order.final_cost = Decimal('10000.00')
            order.assigned_master = master_user
            order.curator = curator_user
            order.status = '–∑–∞–≤–µ—Ä—à–µ–Ω'
            order.save()
            
        print(f"‚úÖ –ó–∞–∫–∞–∑ #{order.id} –Ω–∞ —Å—É–º–º—É {order.final_cost} —Ä—É–±.")
        
        # 5. –°–æ–∑–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
        print("\n5Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞...")
        
        completion, created = OrderCompletion.objects.get_or_create(
            order=order,
            defaults={
                'master': master_user,
                'work_description': '–¢–µ—Å—Ç–æ–≤–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã',
                'parts_expenses': Decimal('2000.00'),
                'transport_costs': Decimal('500.00'),
                'total_received': Decimal('10000.00'),
                'completion_date': timezone.now(),
                'status': '–æ–¥–æ–±—Ä–µ–Ω',
                'curator': curator_user,
                'review_date': django.utils.timezone.now(),
                'curator_notes': '–¢–µ—Å—Ç–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞'
            }
        )
        if not created:
            completion.status = '–æ–¥–æ–±—Ä–µ–Ω'
            completion.curator = curator_user
            completion.review_date = timezone.now()
            completion.save()
            
        print(f"‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ, —Å—Ç–∞—Ç—É—Å: {completion.status}")
        print(f"   - –û–±—â–∏–µ —Ä–∞—Å—Ö–æ–¥—ã: {completion.total_expenses} —Ä—É–±.")
        print(f"   - –ß–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å: {completion.net_profit} —Ä—É–±.")
        
        # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—á–µ—Ç —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
        print("\n6Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞—Å—á–µ—Ç —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è...")
        
        distribution = completion.calculate_distribution()
        if distribution:
            print(f"‚úÖ –†–∞—Å—á–µ—Ç–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ:")
            print(f"   - –ú–∞—Å—Ç–µ—Ä—É –Ω–∞ —Ä—É–∫–∏: {distribution['master_immediate']} —Ä—É–±.")
            print(f"   - –ú–∞—Å—Ç–µ—Ä—É –Ω–∞ –±–∞–ª–∞–Ω—Å: {distribution['master_deferred']} —Ä—É–±.")
            print(f"   - –ö—É—Ä–∞—Ç–æ—Ä—É: {distribution['curator_share']} —Ä—É–±.")
            print(f"   - –ö–æ–º–ø–∞–Ω–∏–∏: {distribution['company_share']} —Ä—É–±.")
            total_calc = distribution['master_immediate'] + distribution['master_deferred'] + distribution['curator_share'] + distribution['company_share']
            print(f"   - –í—Å–µ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–æ: {total_calc} —Ä—É–±.")
            print(f"   - –ß–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å: {completion.net_profit} —Ä—É–±.")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ")
            return False
        
        # 7. –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –±–∞–ª–∞–Ω—Å—ã
        print("\n7Ô∏è‚É£ –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –±–∞–ª–∞–Ω—Å—ã...")
        
        initial_master_amount = master_balance.amount
        initial_master_paid = master_balance.paid_amount
        initial_curator_amount = curator_balance.amount
        print(f"   - –ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å –º–∞—Å—Ç–µ—Ä–∞: {initial_master_amount} —Ä—É–±. (–Ω–∞ —Ä—É–∫–∏: {initial_master_paid})")
        print(f"   - –ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å –∫—É—Ä–∞—Ç–æ—Ä–∞: {initial_curator_amount} —Ä—É–±.")
        
        # 8. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
        print("\n8Ô∏è‚É£ –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è...")
        
        result = distribute_completion_funds(completion, curator_user)
        print(f"‚úÖ –§—É–Ω–∫—Ü–∏—è –≤–µ—Ä–Ω—É–ª–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        
        # 9. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–æ–≤
        print("\n9Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–æ–≤...")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å—ã –∏–∑ –±–∞–∑—ã
        master_balance.refresh_from_db()
        curator_balance.refresh_from_db()
        
        print(f"   - –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å –º–∞—Å—Ç–µ—Ä–∞: {master_balance.amount} —Ä—É–±. (–Ω–∞ —Ä—É–∫–∏: {master_balance.paid_amount})")
        print(f"   - –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å –∫—É—Ä–∞—Ç–æ—Ä–∞: {curator_balance.amount} —Ä—É–±.")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        master_amount_change = master_balance.amount - initial_master_amount
        master_paid_change = master_balance.paid_amount - initial_master_paid
        curator_amount_change = curator_balance.amount - initial_curator_amount
        
        print(f"   - –ò–∑–º–µ–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –º–∞—Å—Ç–µ—Ä–∞: +{master_amount_change} —Ä—É–±.")
        print(f"   - –ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤—ã–ø–ª–∞—Ç –º–∞—Å—Ç–µ—Ä—É: +{master_paid_change} —Ä—É–±.")
        print(f"   - –ò–∑–º–µ–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –∫—É—Ä–∞—Ç–æ—Ä–∞: +{curator_amount_change} —Ä—É–±.")
        
        # 10. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ä–∞—Å—á–µ—Ç–æ–≤
        print("\nüîü –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ä–∞—Å—á–µ—Ç–æ–≤...")
        
        expected_master_balance = distribution['master_deferred']
        expected_master_paid = distribution['master_immediate'] 
        expected_curator = distribution['curator_share']
        
        if abs(master_amount_change - expected_master_balance) < Decimal('0.01'):
            print("‚úÖ –ë–∞–ª–∞–Ω—Å –º–∞—Å—Ç–µ—Ä–∞ –∏–∑–º–µ–Ω–∏–ª—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –±–∞–ª–∞–Ω—Å–µ –º–∞—Å—Ç–µ—Ä–∞: –æ–∂–∏–¥–∞–ª–∏ {expected_master_balance}, –ø–æ–ª—É—á–∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ {master_amount_change}")
            
        if abs(master_paid_change - expected_master_paid) < Decimal('0.01'):
            print("‚úÖ –í—ã–ø–ª–∞—Ç–∞ –º–∞—Å—Ç–µ—Ä—É –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –≤—ã–ø–ª–∞—Ç–µ –º–∞—Å—Ç–µ—Ä—É: –æ–∂–∏–¥–∞–ª–∏ {expected_master_paid}, –ø–æ–ª—É—á–∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ {master_paid_change}")
            
        if abs(curator_amount_change - expected_curator) < Decimal('0.01'):
            print("‚úÖ –ë–∞–ª–∞–Ω—Å –∫—É—Ä–∞—Ç–æ—Ä–∞ –∏–∑–º–µ–Ω–∏–ª—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –±–∞–ª–∞–Ω—Å–µ –∫—É—Ä–∞—Ç–æ—Ä–∞: –æ–∂–∏–¥–∞–ª–∏ {expected_curator}, –ø–æ–ª—É—á–∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ {curator_amount_change}")
        
        # 11. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
        completion.refresh_from_db()
        if completion.is_distributed:
            print("‚úÖ –°—Ç–∞—Ç—É—Å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        else:
            print("‚ùå –°—Ç–∞—Ç—É—Å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω–µ –æ–±–Ω–æ–≤–∏–ª—Å—è")
        
        print("\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    test_profit_distribution()
