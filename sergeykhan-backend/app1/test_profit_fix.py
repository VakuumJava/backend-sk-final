#!/usr/bin/env python3
"""
Test profit distribution after fixing the settings bug
"""

import os
import sys
import django

# Setup Django
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'app1.settings')
django.setup()

from api1.models import CustomUser, Order, OrderCompletion, MasterProfitSettings, ProfitDistributionSettings

def test_profit_settings():
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–∏–±—ã–ª–∏...")
    
    # Get a master
    master = CustomUser.objects.filter(role='master').first()
    if not master:
        print("‚ùå –ú–∞—Å—Ç–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    print(f"‚úÖ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –º–∞—Å—Ç–µ—Ä–æ–º: {master.email}")
    
    # Test global settings
    try:
        global_settings = ProfitDistributionSettings.get_settings()
        print(f"‚úÖ –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—É—á–µ–Ω—ã: {type(global_settings)}")
        print(f"   master_paid_percent: {global_settings.master_paid_percent}")
        print(f"   master_balance_percent: {global_settings.master_balance_percent}")
        print(f"   curator_percent: {global_settings.curator_percent}")
        print(f"   company_percent: {global_settings.company_percent}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
        return
    
    # Test master-specific settings function
    try:
        settings = MasterProfitSettings.get_settings_for_master(master)
        print(f"‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –º–∞—Å—Ç–µ—Ä–∞ –ø–æ–ª—É—á–µ–Ω—ã: {type(settings)}")
        print(f"   settings: {settings}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –º–∞—Å—Ç–µ—Ä–∞: {e}")
        return
    
    # Test calculation on completed order if any
    try:
        completion = OrderCompletion.objects.filter(
            order__assigned_master=master,
            status='–æ–¥–æ–±—Ä–µ–Ω'
        ).first()
        
        if completion:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {completion.id}")
            distribution = completion.calculate_distribution()
            if distribution:
                print(f"‚úÖ –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ:")
                print(f"   master_immediate: {distribution['master_immediate']}")
                print(f"   master_deferred: {distribution['master_deferred']}")
                print(f"   curator_share: {distribution['curator_share']}")
                print(f"   company_share: {distribution['company_share']}")
            else:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ")
        else:
            print("‚ÑπÔ∏è –ù–µ—Ç –æ–¥–æ–±—Ä–µ–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∏–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_profit_settings()
