#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–∫–∏
"""

import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append('/Users/alymbekovsabyr/bg projects/SergeykhanWebSite/sergeykhan-backend/app1')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'app1.settings')
django.setup()

from api1.models import CustomUser, ProfitDistributionSettings, SystemLog

def quick_test():
    """–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞"""
    print("üîß –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã...")
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–æ–¥–µ–ª—å SystemLog —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    print("1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–∏ SystemLog...")
    try:
        count = SystemLog.objects.count()
        print(f"   ‚úÖ –ú–æ–¥–µ–ª—å SystemLog —Ä–∞–±–æ—Ç–∞–µ—Ç. –ó–∞–ø–∏—Å–µ–π: {count}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –º–æ–¥–µ–ª–∏ SystemLog: {e}")
        return False
    
    # 2. –°–æ–∑–¥–∞—ë–º —Ç–µ—Å—Ç–æ–≤—ã–π –ª–æ–≥
    print("2. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ª–æ–≥–∞...")
    try:
        # –°–æ–∑–¥–∞—ë–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        user, created = CustomUser.objects.get_or_create(
            email='quick_test@test.com',
            defaults={'role': 'super-admin'}
        )
        if created:
            user.set_password('test123')
            user.save()
        
        # –°–æ–∑–¥–∞—ë–º —Å–∏—Å—Ç–µ–º–Ω—ã–π –ª–æ–≥
        log = SystemLog.objects.create(
            action='percentage_settings_updated',
            description='–¢–µ—Å—Ç–æ–≤–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã',
            performed_by=user,
            old_value='test_old',
            new_value='test_new',
            metadata={'test': True}
        )
        print(f"   ‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–π –ª–æ–≥ —Å–æ–∑–¥–∞–Ω: ID {log.id}")
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ª–æ–≥–∞: {e}")
        return False
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–∏–±—ã–ª–∏
    print("3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–∏–±—ã–ª–∏...")
    try:
        settings = ProfitDistributionSettings.get_settings()
        print(f"   ‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—É—á–µ–Ω—ã:")
        print(f"      –ú–∞—Å—Ç–µ—Ä—É (–≤—ã–ø–ª–∞—á–µ–Ω–æ): {settings.master_paid_percent}%")
        print(f"      –ú–∞—Å—Ç–µ—Ä—É (–±–∞–ª–∞–Ω—Å): {settings.master_balance_percent}%")
        print(f"      –ö—É—Ä–∞—Ç–æ—Ä—É: {settings.curator_percent}%")
        print(f"      –ö–æ–º–ø–∞–Ω–∏–∏: {settings.company_percent}%")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é
        total = (settings.master_paid_percent + settings.master_balance_percent + 
                settings.curator_percent + settings.company_percent)
        print(f"      –û–±—â–∞—è —Å—É–º–º–∞: {total}%")
        
        if total == 100:
            print("   ‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞: —Å—É–º–º–∞ = 100%")
        else:
            print(f"   ‚ö†Ô∏è –°—É–º–º–∞ –Ω–µ —Ä–∞–≤–Ω–∞ 100%: {total}%")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
        return False
    
    # 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é log_system_action
    print("4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ log_system_action...")
    try:
        from api1.views import log_system_action
        
        old_count = SystemLog.objects.count()
        
        log_system_action(
            action='percentage_settings_updated',
            performed_by=user,
            description='–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è',
            old_value='{"test": "old_value"}',
            new_value='{"test": "new_value"}',
            metadata={'fix_test': True}
        )
        
        new_count = SystemLog.objects.count()
        
        if new_count > old_count:
            print("   ‚úÖ –§—É–Ω–∫—Ü–∏—è log_system_action —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        else:
            print("   ‚ùå –§—É–Ω–∫—Ü–∏—è log_system_action –Ω–µ —Å–æ–∑–¥–∞–ª–∞ –ª–æ–≥!")
            return False
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ log_system_action: {e}")
        return False
    
    return True

if __name__ == '__main__':
    print("üöÄ –ó–∞–ø—É—Å–∫ –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è...")
    
    if quick_test():
        print("\nüéâ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù –£–°–ü–ï–®–ù–û!")
        print("‚úÖ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ 'IntegrityError: NOT NULL constraint failed: api1_orderlog.order_id' –ò–°–ü–†–ê–í–õ–ï–ù–ê!")
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –º–æ–∂–µ—Ç –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–∏–±—ã–ª–∏!")
        print("‚úÖ –ú–æ–¥–µ–ª—å SystemLog —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        print("‚úÖ –§—É–Ω–∫—Ü–∏—è log_system_action —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –æ—à–∏–±–æ–∫!")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ª–æ–≥–æ–≤
        total_logs = SystemLog.objects.count()
        print(f"\nüìä –í—Å–µ–≥–æ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ª–æ–≥–æ–≤ –≤ –±–∞–∑–µ: {total_logs}")
        
        recent_logs = SystemLog.objects.order_by('-created_at')[:2]
        if recent_logs:
            print("üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:")
            for log in recent_logs:
                print(f"   ‚Ä¢ {log.action} - {log.description[:50]}...")
        
    else:
        print("\n‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù!")
        print("–ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –≤ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ.")
        sys.exit(1)
